@using QueteDuDragon.Data
@using QueteDuDragon.Data.Heroes
@inject EtatJeu EtatJeu
@inject NavigationManager Navigation
@page "/combat"

<h3>Combat contre @EtatJeu.BossFinal?.Name </h3>

@if (EtatJeu.SelectedHero == null || EtatJeu.BossFinal == null)
{
    <p>Erreur : Impossible de commencer le combat. Vérifiez que tout est correctement initialisé.</p>
    
}
else if (!EtatJeu.IsCombatActive)
{
    <p>Le combat est terminé:! @((EtatJeu.BossFinal?.pointsVie ?? 0) <= 0 ? "Vous avez vaincu le bossFinal!":"Vous avez été vaincus par le bossFinal.")</p>
    <button @onclick="RetournerAuchoixBoss">Retour au choix boss/magasin</button>
}
else
{
    <p>Héros : @EtatJeu.SelectedHero.Name</p>
    <p>Points de vie  du Heros: @EtatJeu.SelectedHero.pointsVie</p>
    <p>BossFinal :@EtatJeu.BossFinal.Name</p>
    <p>Points de vie du BossFinal : @EtatJeu.BossFinal.pointsVie</p>
    
    <h4>Vos compétences:</h4>
    <div>
        @foreach (var skill in EtatJeu.SelectedHero.Skills  ?? Enumerable.Empty<string>())
        {
            <button @onclick="() => UseSkill(skill)">@skill</button>
        }
    </div>
    
    <h4>Vos outils:</h4>
    <div>
        @foreach (var tool in EtatJeu.SelectedHero.Tools  ?? Enumerable.Empty<string>())
        {
            <button @onclick="() => UseTool(tool)">@tool</button>
        }
    </div>
    
    <p>@combatLog</p>
}

@code {
    private string combatLog = "";

    private void UseSkill(string skill)
    {
        if (EtatJeu.BossFinal == null || EtatJeu.SelectedHero == null)
        {
            combatLog = "Erreur : Héros ou Boss non initialisés.";
            return;
        }
        if (EtatJeu.BossFinal.TryEvade())
        {
            combatLog = $"Le bossFinal esquive l'attaque {skill}";
            BossAttack();
            return;
        }

        int damage = EtatJeu.SelectedHero.UseSkill(skill);
        EtatJeu.BossFinal.TakeDamage(damage);
        combatLog = $"{EtatJeu.SelectedHero.Name} utilise {skill} et inflige {damage} point de degats au bossFinal.";

        
        if (EtatJeu.BossFinal.pointsVie <= 0)
        {
            combatLog += "\nVictoire ! Vous avez vaincu le BossFinal.";
            EtatJeu.IsCombatActive = false;
            return;
        }
        BossAttack(); // Contre-attaque du BossFinal
    }

    private void UseTool(string tool)
    {
        if (EtatJeu.BossFinal == null || EtatJeu.SelectedHero == null)
        {
            combatLog = "Erreur : Héros ou Boss non initialisés.";
            return;
        }
        int damage = EtatJeu.SelectedHero.UseTool(tool);
        EtatJeu.BossFinal.TakeDamage(damage);
        combatLog = $"{EtatJeu.SelectedHero.Name} utilise {tool} et inflige {damage} point de degats au bossFinal.";

        if (EtatJeu.BossFinal.pointsVie <= 0)
        {
            combatLog += "\nVictoire ! Vous avez vaincu le BossFinal.";
            EtatJeu.IsCombatActive = false;
            return;
        }
        BossAttack();
    }

    private void BossAttack()
    {
        if (EtatJeu.BossFinal == null || EtatJeu.SelectedHero == null)
        {
            combatLog = "Erreur : Héros ou Boss non initialisés.";
            return;
        }
        EtatJeu.IncrementCombatTurns();

        Random random = new Random();
        int damage = random.Next(15, 31); // bossFinal tres fort dans mode (facile)
        EtatJeu.SelectedHero.TakeDamage(damage);
        combatLog += $"\n Le BossFinal contre-attaque et inflige {damage} points de degats au héros.";

        if (EtatJeu.SelectedHero.pointsVie <= 0)
        {
            combatLog += "\n Defaite... Le bossFinal vous a vaincu.";
            EtatJeu.IsCombatActive = false;
        }
        else if (EtatJeu.BossFinal.pointsVie <= 0)
        {
            combatLog += "\nVictoire ! Vous avez vaincu le BossFinal.";
            EtatJeu.IsCombatActive = false;
        }

    }

    private void RetournerAuchoixBoss()
    {
        EtatJeu.IsCombatActive = false;
        Navigation.NavigateTo("/choix-boss"); 
    }

}