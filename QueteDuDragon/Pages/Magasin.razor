@page "/marchand"
@using QueteDuDragon.Data
@inject EtatJeu EtatJeu
@inject NavigationManager Navigation
@using System.Collections.Generic

@if (EtatJeu == null || EtatJeu.SelectedHero == null)
{
    <p>Erreur : Le héros ou l'état du jeu n'a pas été initialisé. Veuillez retourner en arrière et réessayer.</p>
    <button @onclick="Retourner">Retour</button>
}
else
{
    <h3>Magasin </h3>
    <p><strong>Bienvenue, @EtatJeu.SelectedHero.Name ! Vous pouvez acheter des objets en fonction de votre niveau.</strong></p>
    <p><strong>Niveau actuel :</strong> @EtatJeu.SelectedHero.Level</p>
    <p><strong>Objets que vous pouvez acheter :</strong> @AllowedPurchases</p>

    <div class="background-image">
        <!-- Contenu ou vide -->
    </div>
    <div>
        @foreach (var item in MagasinObjets)
        {
            <button @onclick="() => AcheterObjet(item)" disabled="@EtatJeu.objetsCollectes.Contains(item)">
                @item
            </button>
        }
    </div>

    <div>
        <p><strong>Achat :</strong> @EtatJeu.objetsCollectes.Count</p>
    </div>

    <button @onclick="Retourner">Retour</button>
}

@code 
{
    private List<string> MagasinObjets = new List<string>
    {
        "Épée à deux mains", "Hache de guerre", "Arc long", "Dague", "Marteau de guerre",
        "Armure de plaque", "Bouclier enchanté",
        "Potion de vitesse", "Pierre de téléportation", "Sceau de protection", "Anneau de résistance",
        "Carte du monde détaillée", "Boussole magique", "Miroir magique"
    };

    // Définir les objets autorisés en fonction du niveau
    private int AllowedPurchases => EtatJeu.SelectedHero.Level switch
    {
        1 => 1,
        2 => 2,
        3 => 3,
        _ => 0
    };

    private void AcheterObjet(string objet)
    {
        if (EtatJeu.objetsCollectes.Count < AllowedPurchases && !EtatJeu.objetsCollectes.Contains(objet))
        {
            EtatJeu.objetsCollectes.Add(objet);

            // Ajouter l'objet dans les compétences du héros pour une utilisation future
            EtatJeu.SelectedHero.Skills.Add(objet);
        }
    }

    private void Retourner()
    {
        if (EtatJeu.SelectedMode == "Facile")
        {
            Navigation.NavigateTo("/mode-facile", forceLoad: true);
        }
        else if (EtatJeu.SelectedMode == "Difficile")
        {
            Navigation.NavigateTo("/mode-difficile", forceLoad: true);
        }
    }
}
